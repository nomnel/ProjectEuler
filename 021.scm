(use math.prime)

(define (e21)
  ; (2 2 3) -> ((3) (2 2))
  (define (group l)
    (fold (^(n p) (if (= n (caar p))
                      (acons n (car p) (cdr p))
                      (cons `(,n) p)))
          (list `(,(car l)))
          (cdr l)))
  ; 12 -> ((3 1) (2 2))
  (define (prime-division n)
    (map (^l (list (car l) (length l)))
         (group (mc-factorize n))))
  (define (d n)
    (- (apply * (map (^l (apply + (map (cut expt (car l) <>)
                                       (iota (+ 1 (cadr l))))))
                     (prime-division n)))
       n))
  (define (amicable-number? n)
    (let1 m (d n)
      (and (not (= n m))
           (= n (d m)))))
  (apply + (filter amicable-number? (iota 9998 2))))
